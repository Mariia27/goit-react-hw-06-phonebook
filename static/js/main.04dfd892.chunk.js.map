{"version":3,"sources":["component/styles.module.css","Redux/book/phonebook-actions.js","Redux/book/phonebook-reducer.js","Redux/store.js","component/Form/Form.js","component/Contact/Contact.js","component/Search/Search.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","onDeleted","veluesFilter","contacts","createReducer","actions","state","filter","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","contactList","dispatch","onSubmit","newName","some","onCheckName","phonebookActions","alert","useState","setName","setNumber","InputValues","evt","currentTarget","value","resetInputValues","idName","idNumber","className","style","form","lengthInputNemeChech","length","lengthInputNumberChech","preventDefault","htmlFor","labelName","type","onChange","autoComplete","labelNumber","pattern","btnForm","getFilterContacts","allContacts","normalizeFilter","toLowerCase","contact","includes","map","btnList","onClick","searchContact","e","target","Search","containerSearch","labelSearch","inputSearch","Mobile","container","headingForm","Contact","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.04dfd892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2ajIX\",\"headingForm\":\"styles_headingForm__27Qzu\",\"contactList\":\"styles_contactList__1QfoU\",\"form\":\"styles_form__978RU\",\"labelName\":\"styles_labelName__2AMY8\",\"labelNumber\":\"styles_labelNumber__35n4D\",\"btnForm\":\"styles_btnForm__2bzBX\",\"containerSearch\":\"styles_containerSearch__3D0-i\",\"btnList\":\"styles_btnList__36pBV\"};","import types from \"./phonebook-types\";\r\nimport shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phonebook/addContact\", (name, number) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\nconst onDeleted = createAction(\"phonebook/deletedContact\");\r\n\r\nconst veluesFilter = createAction(\"phonebook/veluesFilter\");\r\n\r\nexport default { addContact, onDeleted, veluesFilter };","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n    [actions.onDeleted]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n    [actions.veluesFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\n\r\nimport phonebookReducer from \"./book/phonebook-reducer\";\r\n\r\n\r\nconst phonebookPersistConfig = {\r\n    key: \"contacts\",\r\n    storage,\r\n    blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n    },\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/book/phonebook-actions\";\nimport style from \"../styles.module.css\";\n\n\nfunction Form({ contactList, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const InputValues = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const addContact = (evt) => {\n    const lengthInputNemeChech = name.length;\n    const lengthInputNumberChech = number.length;\n    evt.preventDefault();\n    if (lengthInputNemeChech < 2 || lengthInputNemeChech > 10) {\n      alert('Введіть ім\"я більше 1-го символа і не більше 10');\n      return;\n    }\n    if (lengthInputNumberChech < 7 || lengthInputNumberChech > 10) {\n      alert(\"Введіть номер більше 7-ми цифр і не більше 10\");\n      return;\n    }\n\n    const checkName = contactList(name);\n    if (checkName) {\n      alert('Це ім\"я вже існує');\n\n      return;\n    }\n    onSubmit({\n      id: shortid.generate(),\n      name,\n      number,\n    });\n    resetInputValues();\n  };\n\n  const resetInputValues = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const idName = shortid.generate();\n  const idNumber = shortid.generate();\n  return (\n    <form className={style.form} onSubmit={addContact}>\n      <label htmlFor={idName} className={style.labelName}>\n        Name\n      </label>\n      <input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <label htmlFor={idNumber} className={style.labelNumber}>\n        Number\n      </label>\n      <input\n        id={idNumber}\n        type=\"tel\"\n        pattern=\"^[ 0-9]+$\"\n        name=\"number\"\n        value={number}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <button className={style.btnForm} type=\"submite\">\n        Add contact\n      </button>\n    </form>\n  );\n}\nconst onCheckName = (contactList, newName) => {\n  return contactList.some(({ name }) => name === newName);\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (newName, number, contactList) => {\n    if (onCheckName(contactList, newName)) {\n      alert('Це ім\"я вже існує');\n      return;\n    }\n    dispatch(phonebookActions.addContact(newName, number));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/book/phonebook-actions\";\n\nimport style from \"../styles.module.css\";\n\nconst СontactList = ({ contactList, onDeleted }) => {\n  return (\n    <ul className={\"js-list\"}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button\n              className={style.btnList}\n              type=\"button\"\n              onClick={() => onDeleted(id)}\n            >\n              Видалити\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst getFilterContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contactList: getFilterContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleted: (id) => dispatch(phonebookActions.onDeleted(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport phonebookActions from \"../../Redux/book/phonebook-actions\";\nimport style from \"../styles.module.css\";\nfunction Search({ value, Search }) {\n  const id = shortid.generate();\n  return (\n    <div className={style.containerSearch}>\n      <label className={style.labelSearch} htmlFor={id}>\n        Поиск контакта по имени\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={Search}\n        id={id}\n        className={style.inputSearch}\n      ></input>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchContact: (e) => dispatch(phonebookActions.veluesFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import style from \"./component/styles.module.css\";\n\nimport Form from \"./component/Form/Form\";\nimport ContactList from \"./component/Contact/Contact\";\nimport SearchContact from \"./component/Search/Search\";\n\nexport default function Mobile() {\n  return (\n    <div className={style.container}>\n      <h1 className={style.headingForm}>Телефонна книга</h1>\n      <Form />\n      {/* <Form onSubmit={addContact} contactList={onCheckName} /> */}\n      {/* <SearchContact velue={filter} SearchContact={veluesFilter} /> */}\n      {/* <ContactList contactList={getFilter()} onDeleted={deletedContact} /> */}\n      <h2 className={style.contactList}>Контакти</h2>\n      <SearchContact />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <PersistGate loading={null} persistor={store.persistor}>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </PersistGate>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}